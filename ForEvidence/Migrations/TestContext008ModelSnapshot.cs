// <auto-generated />
using System;
using ForEvidence.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForEvidence.Migrations
{
    [DbContext(typeof(TestContext008))]
    partial class TestContext008ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ForEvidence.Models.BookDetail", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookID"), 1L, 1);

                    b.Property<int?>("BTypeTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("StoreID")
                        .HasColumnType("int");

                    b.Property<int?>("StoreMasterStoreID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("BookID");

                    b.HasIndex("BTypeTypeID");

                    b.HasIndex("StoreMasterStoreID");

                    b.ToTable("BookDetails");
                });

            modelBuilder.Entity("ForEvidence.Models.BType", b =>
                {
                    b.Property<int>("TypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeID"), 1L, 1);

                    b.Property<string>("TName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)");

                    b.HasKey("TypeID");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("ForEvidence.Models.StoreMaster", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreID"), 1L, 1);

                    b.Property<int?>("BTypeTypeID")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SellDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)");

                    b.Property<string>("StoreType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("StoreID");

                    b.HasIndex("BTypeTypeID");

                    b.ToTable("StoreMasters");
                });

            modelBuilder.Entity("ForEvidence.Models.BookDetail", b =>
                {
                    b.HasOne("ForEvidence.Models.BType", "BType")
                        .WithMany("BookDetails")
                        .HasForeignKey("BTypeTypeID");

                    b.HasOne("ForEvidence.Models.StoreMaster", "StoreMaster")
                        .WithMany("bookDetails")
                        .HasForeignKey("StoreMasterStoreID");

                    b.Navigation("BType");

                    b.Navigation("StoreMaster");
                });

            modelBuilder.Entity("ForEvidence.Models.StoreMaster", b =>
                {
                    b.HasOne("ForEvidence.Models.BType", null)
                        .WithMany("StoreMasters")
                        .HasForeignKey("BTypeTypeID");
                });

            modelBuilder.Entity("ForEvidence.Models.BType", b =>
                {
                    b.Navigation("BookDetails");

                    b.Navigation("StoreMasters");
                });

            modelBuilder.Entity("ForEvidence.Models.StoreMaster", b =>
                {
                    b.Navigation("bookDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
